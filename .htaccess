RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php?url=$1 [QSA,L]


# ส่งทุก request ไปที่ index.php
# RewriteRule ^([^\.]+)$ $1.php [NC,L]



# RewriteEngine On
# คำสั่งนี้ใช้เปิดการทำงานของโมดูล mod_rewrite ซึ่งเป็นเครื่องมือสำหรับจัดการกฎการเขียน URL ใหม่ใน Apache ถ้าไม่เปิดใช้งาน โค้ดที่ตามมาจะไม่ทำงาน

# RewriteCond %{REQUEST_FILENAME} !-f
# เงื่อนไขนี้ตรวจสอบว่า "ชื่อไฟล์ที่ร้องขอ" (เช่น URL ที่ผู้ใช้พิมพ์) ไม่ใช่ไฟล์จริง (!-f หมายถึง "not a file")
# ถ้ามีไฟล์จริงอยู่ (เช่น image.jpg หรือ script.js) เงื่อนไขนี้จะทำให้กฎด้านล่างไม่ถูกนำไปใช้ เพื่อป้องกันการรบกวนไฟล์ที่มีอยู่จริง

# RewriteCond %{REQUEST_FILENAME} !-d
# เงื่อนไขนี้ตรวจสอบว่า "ชื่อไฟล์ที่ร้องขอ" ไม่ใช่โฟลเดอร์จริง (!-d หมายถึง "not a directory")
# เหมือนกับเงื่อนไขก่อนหน้า เพื่อให้แน่ใจว่าถ้ามีโฟลเดอร์จริงอยู่ กฎด้านล่างจะไม่ทำงาน


# RewriteRule ^([^\.]+)$ $1.php [NC,L]
# นี่คือกฎหลักที่กำหนดการเขียน URL ใหม่ มาดูส่วนประกอบกัน:
# ^([^\.]+)$
# ^ หมายถึงจุดเริ่มต้นของ URL
# [^\.]+ หมายถึงตัวอักษรใด ๆ ที่ไม่ใช่จุด (.) อย่างน้อย 1 ตัว (เพื่อจับชื่อไฟล์ที่ไม่มีนามสกุล)
# $ หมายถึงจุดสิ้นสุดของ URL
# รวมกันคือ จับ URL ที่ไม่มีจุด (เช่น about แต่ไม่ใช่ about.php หรือ file.txt)
# $1.php
# $1 อ้างถึงส่วนที่จับได้จากวงเล็บใน pattern ด้านบน (เช่น about) แล้วเติม .php ต่อท้าย (กลายเป็น about.php)
# [NC,L]
# NC (No Case) ทำให้กฎนี้ไม่สนใจตัวพิมพ์ใหญ่-เล็ก (เช่น About และ about ทำงานเหมือนกัน)
# L (Last) บอกว่าให้หยุดประมวลผลกฎอื่น ๆ หากกฎนี้ถูกใช้